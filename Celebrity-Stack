//{ Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//User function template for C++

class Solution 
{
    public:
    //Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& M, int n) 
    {
        // code here 
        stack <int> s;
        //push all elements in stack
        for(int i=0;i<n;i++){
            s.push(i);
        }
        int a,b;
        //take two ele at a time to check one knows the other 
        while(s.size() > 1){
            a=s.top();
            s.pop();
            // a=s.pop();
            b=s.top();
            s.pop();
            if(M[a][b] == 1){
            //if a knows b then discard a and push b back to stack
                s.push(b);
            }
            else{
            //if b knows a then discard b and push a onto stack
                s.push(a);
            }
        }
        //the last ele left is a potential celeb
        //for verification of potential celeb candidate
        int res = s.top();
        bool ans = true;
        for(int i=0; i<n;i++){
            if(res != i){
            //check if celeb knows none and everyone knows the celeb.
                if(M[res][i] == 1 || M[i][res] == 0){
                    return -1;
                }
            }
        }
        
        return res;
    }
};

//{ Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        vector<vector<int> > M( n , vector<int> (n, 0));
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                cin>>M[i][j];
            }
        }
        Solution ob;
        cout<<ob.celebrity(M,n)<<endl;

    }
}

// } Driver Code Ends
